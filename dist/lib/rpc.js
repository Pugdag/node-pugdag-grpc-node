"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPC = exports.Client = void 0;
const grpc_1 = require("../../../grpc");
Object.defineProperty(exports, "Client", { enumerable: true, get: function () { return grpc_1.Client; } });
class RPC {
    constructor(options = {}) {
        if (options.client) {
            this.client = options.client;
        }
        else {
            this.client = new grpc_1.Client(options.clientConfig || {});
            this.client.connect();
        }
    }
    onConnect(callback) {
        this.client.onConnect(callback);
    }
    onConnectFailure(callback) {
        this.client.onConnectFailure(callback);
    }
    onError(callback) {
        this.client.onError(callback);
    }
    onDisconnect(callback) {
        this.client.onDisconnect(callback);
    }
    disconnect() {
        var _a;
        (_a = this.client) === null || _a === void 0 ? void 0 : _a.disconnect();
    }
    connect() {
        var _a;
        return (_a = this.client) === null || _a === void 0 ? void 0 : _a.connect();
    }
    unSubscribe(method, uid = '') {
        return this.client.unSubscribe(method, uid);
    }
    subscribe(method, data, callback) {
        return this.client.subscribe(method, data, callback);
    }
    request(method, data) {
        return this.client.call(method, data);
    }
    subscribeChainChanged(callback) {
        return this.subscribe("notifyChainChangedRequest", {}, callback);
    }
    subscribeBlockAdded(callback) {
        return this.subscribe("notifyBlockAddedRequest", {}, callback);
    }
    subscribeVirtualSelectedParentBlueScoreChanged(callback) {
        return this.subscribe("notifyVirtualSelectedParentBlueScoreChangedRequest", {}, callback);
    }
    subscribeUtxosChanged(addresses, callback) {
        return this.subscribe("notifyUtxosChangedRequest", { addresses }, callback);
    }
    unSubscribeUtxosChanged(uid = '') {
        this.unSubscribe("notifyUtxosChangedRequest", uid);
    }
    getBlock(hash, includeTransactions = true) {
        return this.request('getBlockRequest', { hash, includeTransactions });
    }
    getTransactionsByAddresses(startingBlockHash, addresses) {
        return this.request('getTransactionsByAddressesRequest', {
            startingBlockHash, addresses
        });
    }
    getUtxosByAddresses(addresses) {
        return this.request('getUtxosByAddressesRequest', { addresses });
    }
    submitTransaction(tx) {
        return this.request('submitTransactionRequest', tx);
    }
    getVirtualSelectedParentBlueScore() {
        return this.request('getVirtualSelectedParentBlueScoreRequest', {});
    }
    getBlockDagInfo() {
        return this.request('getBlockDagInfoRequest', {});
    }
    subscribeVirtualDaaScoreChanged(callback) {
        return this.subscribe("notifyVirtualDaaScoreChangedRequest", {}, callback);
    }
}
exports.RPC = RPC;
//# sourceMappingURL=data:application/json;base64,